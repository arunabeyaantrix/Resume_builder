[{"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\App.js":"3","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Header\\Navbar.jsx":"4","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Home.jsx":"5","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Form.jsx":"6","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Data\\addAddress.jsx":"7","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Data\\addEducationDetail.jsx":"8","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Data\\addProjects.jsx":"9","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\store.js":"10","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\rootReducer.js":"11","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\index.js":"12","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\ProjectReducer.js":"13","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\ProjectActions.js":"14","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\ProjectActionTypes.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":577,"mtime":1611457054242,"results":"19","hashOfConfig":"17"},{"size":1036,"mtime":1611379102985,"results":"20","hashOfConfig":"17"},{"size":16188,"mtime":1611458678442,"results":"21","hashOfConfig":"17"},{"size":0,"mtime":1611146840993,"results":"22","hashOfConfig":"17"},{"size":3209,"mtime":1611379259563,"results":"23","hashOfConfig":"17"},{"size":2613,"mtime":1611383749087,"results":"24","hashOfConfig":"17"},{"size":3188,"mtime":1611458137792,"results":"25","hashOfConfig":"17"},{"size":331,"mtime":1611456941526,"results":"26","hashOfConfig":"17"},{"size":158,"mtime":1611457964012,"results":"27","hashOfConfig":"17"},{"size":115,"mtime":1611456279602,"results":"28","hashOfConfig":"17"},{"size":469,"mtime":1611458906574,"results":"29","hashOfConfig":"17"},{"size":242,"mtime":1611459047725,"results":"30","hashOfConfig":"17"},{"size":53,"mtime":1611455859429,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"bqym41",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\index.js",[],["68","69"],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\App.js",["70"],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Navbar from \"./Header/Navbar\";\nimport Home from \"./Components/Home\";\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './store/store'\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Navbar />\n        <BrowserRouter>\n          <Home />\n        </BrowserRouter>\n      </Provider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Header\\Navbar.jsx",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Home.jsx",["71"],"import React,{Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport \"./style.css\";\r\nimport AddAddress from \"./Data/addAddress\";\r\nimport AddEducationDetails from \"./Data/addEducationDetail\";\r\nimport AddProject from \"./Data/addProjects\";\r\nimport {Input,Tag} from \"antd\";\r\nimport { TweenOneGroup } from 'rc-tween-one';\r\nimport * as projectActions from \"../store/projects\";\r\n\r\nconst {TextArea} = Input\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        visible: false,\r\n        visible2:false,\r\n        visible3:false,\r\n        visible4:false,\r\n        tags: [],\r\n        inputValue: '',\r\n        tags2: [],\r\n        inputValue2: '',\r\n        projectData:{},\r\n        postData : {\r\n            first_name:\"\",\r\n            last_name:\"\",\r\n            objective:\"\",\r\n        }\r\n    }\r\n\r\n\r\n    updatevalTostate(value, key) {\r\n        let {postData} = this.state;\r\n        let tempPostData = { ...postData };\r\n        tempPostData[key] = value;\r\n        this.setState({postData:tempPostData})\r\n        \r\n    }\r\n     onHideModal = () => {\r\n        this.setState({visible:false})\r\n    }\r\n    onHideModal2 = () => {\r\n        this.setState({visible2:false})\r\n    }\r\n    onHideModal3 = () => {\r\n        this.setState({visible3:false})\r\n        \r\n    }\r\n    onHideModal4 = () => {\r\n        this.setState({visible4:false})\r\n    }\r\n    saveInputRef = input => {\r\n        this.input = input;\r\n    };\r\n    saveInputRef2 = input => {\r\n        this.input = input;\r\n    };\r\n\r\n    handleClose = removedTag => {\r\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n        console.log(tags);\r\n        this.setState({ tags:tags });\r\n    };\r\n    handleClose2 = removedTag => {\r\n        const tags2 = this.state.tags2.filter(tag => tag !== removedTag);\r\n        console.log(tags2);\r\n        this.setState({ tags2:tags2 });\r\n    };\r\n    handleClose3 = removedTag => {\r\n        const tags3 = this.state.tags3.filter(tag => tag !== removedTag);\r\n        this.setState({ tags3:tags3 });\r\n    };\r\n    \r\n      showInput = () => {\r\n        this.setState({ inputVisible: true }, () => this.input.focus());\r\n      };\r\n    \r\n      handleInputChange = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n      };\r\n      handleInputChange2 = e => {\r\n        this.setState({ inputValue2: e.target.value });\r\n      };\r\n    \r\n      handleInputConfirm = () => {\r\n        const { inputValue } = this.state;\r\n        let { tags } = this.state;\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n          tags = [...tags, inputValue];\r\n        }\r\n        console.log(tags);\r\n        this.setState({\r\n          tags,\r\n          inputVisible: false,\r\n          inputValue: '',\r\n        });\r\n      };\r\n      handleInputConfirm2 = () => {\r\n        const { inputValue2 } = this.state;\r\n        let { tags2 } = this.state;\r\n        if (inputValue2 && tags2.indexOf(inputValue2) === -1) {\r\n          tags2 = [...tags2, inputValue2];\r\n        }\r\n        console.log(tags2);\r\n        this.setState({\r\n          tags2,\r\n          inputValue2: '',\r\n        });\r\n      };\r\n    \r\n      saveInputRef = input => {\r\n        this.input = input;\r\n      };\r\n    \r\n    forMap = tag => {\r\n        const tagElem = (\r\n            <Tag\r\n                closable\r\n                onClose={e => {\r\n                e.preventDefault();\r\n                this.handleClose(tag);\r\n                }}\r\n            >\r\n                {tag}\r\n            </Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block' }}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n      };\r\n\r\n    forMap2 = tag => {\r\n        const tagElem = (\r\n            <Tag\r\n                closable\r\n                onClose={e => {\r\n                e.preventDefault();\r\n                this.handleClose2(tag);\r\n                }}\r\n            >\r\n                {tag}\r\n            </Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block' }}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    };\r\n    submitResume(e) {\r\n        e.preventDefault()\r\n        console.log(\"hiiii\");\r\n        console.log(this.props.projectReducer);\r\n    }\r\n    forMap3 = tag => {\r\n        const tagElem = (\r\n            <Tag\r\n                closable\r\n                onClose={e => {\r\n                e.preventDefault();\r\n                this.handleClose3(tag);\r\n                }}\r\n            >\r\n                {tag}\r\n            </Tag>\r\n        );\r\n        return (\r\n            <span key={tag} style={{ display: 'inline-block' }}>\r\n                {tagElem}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    componentDidMount(){\r\n        // let {projectData} = this.props.projectReducer;\r\n        // console.log(projectData);\r\n    }\r\n\r\n    render(){\r\n        const { tags,tags2,visible, visible2,visible3,visible4,postData, inputValue,inputValue2 } = this.state;\r\n        const tagChild = tags.map(this.forMap);\r\n        const tagChild2 = tags2.map(this.forMap2);\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"card mt-5 pt-5\" style={{padding:\"15px\"}} >\r\n                            <div className=\"mainRenderGrid\">\r\n                                <div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"first_name\" className=\"labelClass\">First Name:</label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            class=\"form-control\" \r\n                                            id=\"first_name\" \r\n                                            aria-describedby=\"first_name\" \r\n                                            placeholder=\"First Name\" \r\n                                            value={postData.first_name}\r\n                                            onChange={(e) => this.updatevalTostate(e.target.value, \"first_name\")}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"objective\" className=\"labelClass\">Objective:</label>\r\n                                        <TextArea \r\n                                            rows={4} \r\n                                            class=\"form-control\" \r\n                                            id=\"objective\" \r\n                                            aria-describedby=\"objective\" \r\n                                            placeholder=\"Objective\"\r\n                                            value={postData.objective}\r\n                                            onChange={(e) => this.updatevalTostate(e.target.value, \"objective\")}\r\n                                            \r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"objective\" className=\"labelClass\">Address:</label>\r\n                                        <button class=\"btn btn-primary\" style={{width:\"100%\"}} onClick={() => this.setState({visible:true})}>Add address</button>\r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <div></div>\r\n                                        <TweenOneGroup\r\n                                            enter={{\r\n                                            scale: 0.8,\r\n                                            opacity: 0,\r\n                                            type: 'from',\r\n                                            duration: 100,\r\n                                            onComplete: e => {\r\n                                                e.target.style = '';\r\n                                            },\r\n                                            }}\r\n                                            leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\r\n                                            appear={false}\r\n                                        >\r\n                                            {tagChild}\r\n                                        </TweenOneGroup>\r\n                                    </div>\r\n                                  \r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"objective\" className=\"labelClass\">Hobbies:</label>\r\n                                        <div style={{display:\"grid\", gridTemplateColumns:\"1fr 120px\"}}>\r\n                                            <Input\r\n                                                ref={this.saveInputRef}\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                value={inputValue}\r\n                                                onChange={this.handleInputChange}\r\n                                                onPressEnter={this.handleInputConfirm}\r\n                                                placeholder=\"Your Hobby\"\r\n                                            />\r\n                                            <button class=\"btn btn-primary ml-1\" style={{height:\"36px\"}}onClick={() => {this.handleInputConfirm()}}>Add to List</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"last_name\" className=\"labelClass\">Last Name:</label>\r\n                                        <input type=\"text\" class=\"form-control\" id=\"last_name\" aria-describedby=\"last_name\" placeholder=\"Last Name\"/>\r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"last_name\" className=\"labelClass\">Educational Details:</label>\r\n                                        <button class=\"btn btn-primary\" style={{width:\"100%\"}} onClick={() => this.setState({visible2:true})}>Add Educational Details</button>\r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"last_name\" className=\"labelClass\">Projects:</label>\r\n                                        <button class=\"btn btn-primary\" style={{width:\"100%\"}} onClick={() => this.setState({visible3:true})}>Add Projects</button> \r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"last_name\" className=\"labelClass\">Achievements and Certifications:</label>\r\n                                        <button class=\"btn btn-primary\" style={{width:\"100%\"}} onClick={() => this.setState({visible4:true})}>Achievements and Certifications</button> \r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <div></div>\r\n                                        <TweenOneGroup\r\n                                            enter={{\r\n                                            scale: 0.8,\r\n                                            opacity: 0,\r\n                                            type: 'from',\r\n                                            duration: 100,\r\n                                            onComplete: e => {\r\n                                                e.target.style = '';\r\n                                            },\r\n                                            }}\r\n                                            leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\r\n                                            appear={false}\r\n                                        >\r\n                                            {tagChild2}\r\n                                        </TweenOneGroup>\r\n                                    </div>\r\n                                    <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                        <label for=\"objective\" className=\"labelClass\">Skills:</label>\r\n                                        <div style={{display:\"grid\", gridTemplateColumns:\"1fr 120px\"}}>\r\n                                            <Input\r\n                                                ref={this.saveInputRef2}\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                value={inputValue2}\r\n                                                onChange={this.handleInputChange2}\r\n                                                onPressEnter={this.handleInputConfirm2}\r\n                                                placeholder=\"Skills\"\r\n                                            />\r\n                                            <button class=\"btn btn-primary ml-1\" style={{height:\"36px\"}}onClick={() => {this.handleInputConfirm2()}}>Add to List</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                            {/* <div class=\"form-group\" style={{display:\"grid\", gridTemplateColumns:\"170px 1fr\"}}>\r\n                                <label for=\"exampleInputPassword1\">Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n                            </div>\r\n                            <div class=\"form-group form-check\">\r\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\"/>\r\n                                <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n                            </div> */}\r\n                            <button type=\"submit\" class=\"btn btn-primary\" onClick={(e) => this.submitResume(e)}>Create Resume</button>\r\n    \r\n                    </div>\r\n                </div>\r\n                <AddAddress \r\n                    visible={visible}\r\n                    title={\"Add Address\"}\r\n                    onHideModel={() => this.onHideModal()}\r\n                />\r\n                <AddEducationDetails \r\n                    visible={visible2}\r\n                    title={\"Add Education Details\"}\r\n                    onHideModel={() => this.onHideModal2()}\r\n                />\r\n                <AddProject \r\n                    visible={visible3}\r\n                    title={\"Add Project\"}\r\n                    onHideModel={() => this.onHideModal3()}\r\n                />\r\n               \r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        projectReducer:state.projectReducer\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators({ ...projectActions }, dispatch),\r\n    };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n \r\n","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Form.jsx",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Data\\addAddress.jsx",["72","73","74"],"import React, {useState, useEffect} from 'react'\r\nimport \"../style.css\";\r\nimport {Modal} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nfunction AddAddress(props) {\r\n    const [visible,setVisible] = useState(props.visible);\r\n    const [title, setTitle] = useState(props.title)\r\n    const [init,setInit] = useState(true);\r\n\r\n    const {onHideModal} = props;\r\n    useEffect(() => {\r\n        if(props.visible === true){\r\n            setVisible(props.visible);\r\n            setTitle(props.title)\r\n        }\r\n    }, [props])\r\n\r\n    function setHandle(){\r\n            setVisible(false);\r\n            props.onHideModel();\r\n    }\r\n    return (\r\n        <Modal\r\n            title={title}\r\n            visible={visible}\r\n            onCancel={setHandle}\r\n            onOk={setHandle}\r\n        >\r\n            <form>\r\n                <div class=\"form-group\">\r\n                    <label for=\"address\" className=\"labelClass\">Address Line 1:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"address_one\" aria-describedby=\"address_one\" placeholder=\"Address Line 1\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"district\" className=\"labelClass\">District:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"district\" aria-describedby=\"district\" placeholder=\"District\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"country\" className=\"labelClass\">Country:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"country\" aria-describedby=\"country\" placeholder=\"Country\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"phone_number\" className=\"labelClass\">Mobile Number:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"phone_number\" aria-describedby=\"phone_number\" placeholder=\"Mobile Number\"/>\r\n                </div>\r\n                        \r\n                    \r\n                <div class=\"form-group\">\r\n                    <label for=\"last_name\" className=\"labelClass\">Last Name:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"last_name\" aria-describedby=\"last_name\" placeholder=\"Last Name\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"address\" className=\"labelClass\">Address Line 2:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"address_two\" aria-describedby=\"address_two\" placeholder=\"Address Line 2\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"state\" className=\"labelClass\">State:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"state\" aria-describedby=\"state\" placeholder=\"State\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"pincode\" className=\"labelClass\">Pincode:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"pincode\" aria-describedby=\"pincode\" placeholder=\"Pincode\"/>\r\n                </div>\r\n               \r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddAddress;\r\n","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Data\\addEducationDetail.jsx",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\Components\\Data\\addProjects.jsx",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\store.js",["75"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore((rootReducer),applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\rootReducer.js",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\index.js",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\ProjectReducer.js",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\ProjectActions.js",[],"C:\\Users\\user\\Desktop\\Projects\\resume\\src\\store\\projects\\ProjectActionTypes.js",[],["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":184,"column":55,"nodeType":"84","messageId":"85","endLine":184,"endColumn":63},{"ruleId":"82","severity":1,"message":"87","line":9,"column":12,"nodeType":"84","messageId":"85","endLine":9,"endColumn":16},{"ruleId":"82","severity":1,"message":"88","line":9,"column":17,"nodeType":"84","messageId":"85","endLine":9,"endColumn":24},{"ruleId":"82","severity":1,"message":"89","line":11,"column":12,"nodeType":"84","messageId":"85","endLine":11,"endColumn":23},{"ruleId":"82","severity":1,"message":"90","line":1,"column":23,"nodeType":"84","messageId":"85","endLine":1,"endColumn":38},{"ruleId":"78","replacedBy":"91"},{"ruleId":"80","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'visible4' is assigned a value but never used.","'init' is assigned a value but never used.","'setInit' is assigned a value but never used.","'onHideModal' is assigned a value but never used.","'combineReducers' is defined but never used.",["93"],["94"],"no-global-assign","no-unsafe-negation"]